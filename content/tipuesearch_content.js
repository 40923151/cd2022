var tipuesearch = {"pages": [{'title': 'About', 'text': '分組網站 \n Wink教學 \n 協同流程教學 \n -------------------- -------------------- \n 組員網站 \n 40923123 web \xa0|\xa0 40923123 repo \xa0| 40923131 web \xa0|\xa0 40923131 repo \xa0| 40923133 web \xa0|\xa0 40923133 repo \xa0| 40923134 web \xa0|\xa0 40923134 repo \xa0| 40923135 web \xa0|\xa0 40923135 repo \xa0| 40923139 web \xa0|\xa0 40923139 repo \xa0| 40923142 web \xa0|\xa0 40923142 repo \xa0| 40923151 web \xa0|\xa0 40923151 repo \xa0| \n -------------------- -------------------- \n', 'tags': '', 'url': 'About.html'}, {'title': 'midterm', 'text': '\n \n 模擬檔案 : 下載 \n 流程: \n 把 stl 檔匯入 coppliasim 接著把軸互相連接 \n 最後把控制原始碼加進去 就完成了 \n 心得: \n 這個模擬跟上學期的幾乎一樣 \n 有差的地方大概只有零件不太一樣 \n 所以在模擬上沒甚麼太大的難度 \n 但如果要像老師說的需要更改尺寸 \n 可以讓程式自動組立 \n 讓模擬自動生成 \n 這個部分就還需要多多研究 \n 還需要學習更多程式語言 \n 像是c++、python、c之類的 \n \n', 'tags': '', 'url': 'midterm.html'}, {'title': 'NX_video', 'text': '第4部(基礎3D繪製) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第11部(繪製圓形球體) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第13部(繪製曲柄) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第23部(繪製碟煞盤) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第36部(繪製金屬壓製薄板) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n', 'tags': '', 'url': 'NX_video.html'}, {'title': 'hw', 'text': '', 'tags': '', 'url': 'hw.html'}, {'title': 'w7', 'text': 'onshape 零件檔 :  URL \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w10', 'text': '第10週的功課內容 \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w10_block_ui', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'w11', 'text': '協同流程 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 把 stl 檔匯入 coppeliasim \n 轉成 xml 檔 \n 流程如下 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '', 'tags': '', 'url': 'w12.html'}, {'title': 'w12_cadlab_startup', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w12_cadlab_startup.html'}, {'title': 'w12_graduate_school', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w12_graduate_school.html'}, {'title': 'w12_task', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w12_task.html'}, {'title': 'w14', 'text': 'uarm零件檔案 \n coppeliasim模擬 \n 模擬檔案 \n \n 模擬設定教學 \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '模擬檔案，nx檔案 下載區 \n 按鍵位置 \n \xa0k、l\xa0  左右旋轉 \n \xa0f、g\xa0 \xa0上下擺動 \n \xa0h、j\xa0  前後擺動 \n \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '', 'tags': '', 'url': 'w16.html'}, {'title': 'rotating_cuboid', 'text': '首先要把綠色框起來的地方改成自己 coppeliasim 的位置 \n \n 再來就可以 Tools Go \n 就會跑出兩個攝影機 \n \n', 'tags': '', 'url': 'rotating_cuboid.html'}, {'title': 'uarm_nx_tkinter_gui_control', 'text': '先開啟視覺串流伺服器 \n \n 要先開啟 coppeliasim 的模擬 \n 再 Tools Go \n 再按 to connect\xa0 \n 就可以試試看移動 UI 介面 \n 網站上的會跟軟體內的同步 \n \n', 'tags': '', 'url': 'uarm_nx_tkinter_gui_control.html'}, {'title': 'Online Exam', 'text': '轉動前 \n \n 各軸轉動5度後 \n \n 吸取方塊 \n \n function sysCall_init()\n    axis1=sim.getObject(\'./joint1\')\n    axis2=sim.getObject(\'./joint2\')\n    axis3=sim.getObject(\'./joint3\')\n    suctionPad=sim.getObject(\'/suctionPad\')\n    rotation1 = 0\n    rotation2 = 0\n    rotation3 = 0\n    deg = math.pi/180.\n    enableSuctionPad(true)\nend\nfunction enableSuctionPad(enable)\n    -- use the suctionPad object to pass the variable activity value\n    -- if enable = true, the activity = \'on\'\n    if enable then\n        sim.writeCustomDataBlock(suctionPad,\'activity\',\'on\')\n    else\n        sim.writeCustomDataBlock(suctionPad,\'activity\',\'off\')\n    end\nend\nfunction sysCall_actuation() \n--[[\n    rotation1 = rotation1 + 1*deg\n    print(rotation1)\n    sim.setJointPosition(axis1, -rotation1)\n    sim.setJointPosition(axis2, -rotation1)\n]]\n    message, auxiliaryData=sim.getSimulatorMessage()\n    while message ~= -1 do\n        key=auxiliaryData[1]\n        sim.addStatusbarMessage(\'user press key:\'..key)\n        if (message==sim.message_keypress) then\n           --if (auxiliaryData[1]==112) then --p activate the suction pad\n            if (auxiliaryData[1]==string.byte(\'p\')) then\n                -- if key p pressed activate the suction mode\n--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\')\n                enableSuctionPad(true)\n            end -- if p\n            if (auxiliaryData[1]==string.byte(\'q\')) then --q deactivate the suction pad\n                -- if key q pressed deactivate the suction mode\n--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\')\n                enableSuctionPad(false)\n            end -- if q\n            if (auxiliaryData[1]==string.byte(\'k\')) then --k right turn in degree\n                -- if key k pressed axis1 angle adds 2 degrees\n                 rotation1 = rotation1 + 2*deg\n                 --sim.setJointPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis1, rotation1)\n            end -- if k\n            if (auxiliaryData[1]==string.byte(\'l\')) then --l left turn in degree\n                -- if key l pressed axis1 angle substract 2 degrees\n                 rotation1 = rotation1 - 2*deg\n                 --sim.setJointPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis1, rotation1)\n            end -- if l\n-- for joint2 start ##########################################################\n            if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree\n                -- if key r pressed axis1 angle adds 2 degrees\n                 rotation2 = rotation2 + 1*deg\n                 --sim.setJointPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis2, rotation2)\n            end -- if k\n            if (auxiliaryData[1]==string.byte("j")) then\n                -- if key j pressed axis2 angle substract 2 degrees\n                 rotation2 = rotation2 - 1*deg\n                 --sim.setJointPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis2, rotation2)\n            end -- if j\n-- for joint2 end ##########################################################\n-- for joint3 start ##########################################################\n            if (auxiliaryData[1]== string.byte("f")) then\n                -- if key f pressed axis3 angle adds 2 degrees\n                 rotation3 = rotation3 + 1*deg\n                 --sim.setJointPosition(axis3, rotation3)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if f\n            if (auxiliaryData[1]==string.byte("g")) then\n                -- if key g pressed axis3 angle substract 2 degrees\n                 rotation3 = rotation3 - 1*deg\n                 --sim.setJointPosition(axis3, rotation3)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if g\n-- for joint3 end ##########################################################\n            if (auxiliaryData[1]==99) then --c coordinate of block\n                blockPosition = sim.getObjectPosition(block, BaseFrame)\n                sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))\n            end --if c\n            if (auxiliaryData[1]==string.byte(\'z\')) then \n                 rotation1 = rotation1 - 5*deg\n                 rotation2 = rotation2 - 5*deg\n                 rotation3 = rotation3 - 5*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if z\n             if (auxiliaryData[1]==string.byte(\'x\')) then \n                 rotation1 = rotation1 - 10*deg\n                 rotation2 = rotation2 - 27*deg\n                 rotation3 = rotation3 - 29*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if x\n       end  -- if\n    message, auxiliaryData=sim.getSimulatorMessage()\n    end -- while\nend -- function\n\nfunction sysCall_sensing() \n--[[\n    -- Read Proximity sensor (0= nothing detected, 1 = object detected)\n    local res = sim.readProximitySensor(proximity)\n\n    -- Check if possible to insert an new box\n    if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then\n        insertBox()\n    end\n\n    -- If proximity sensor detects an object, stop the belt, stop inserting objects\n    if res == 1 and not hasStopped then\n        if boolList[1] then\n            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)\n            deltaTime = sim.getSimulationTime()-T_last_inserted\n            hasStopped = true\n        else\n            local box = table.remove(boxList,1)\n            local boxDummy = table.remove(boxDummyList,1)\n            table.remove(boolList,1)\n\n            sim.removeObject(box)\n            sim.removeObject(boxDummy)\n        end\n    end\n\n    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting\n    if res == 0 and hasStopped then\n        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)\n        hasStopped = false\n        T_last_inserted = sim.getSimulationTime()-deltaTime\n    end\n    \n]]--\nend\nfunction sysCall_sensing()\n    -- put your sensing code here\nend\nfunction sysCall_cleanup()\n    -- do some clean-up here\nend\n-- Convert a lua table into a lua syntactically correct string\nfunction table_to_string(tbl)\n    local result = "{"\n    for k, v in pairs(tbl) do\n        -- Check the key type (ignore any numerical keys - assume its an array)\n        if type(k) == "string" then\n            result = result.."[\\""..k.."\\"]".."="\n        end\n        -- Check the value type\n        if type(v) == "table" then\n            result = result..table_to_string(v)\n        elseif type(v) == "boolean" then\n            result = result..tostring(v)\n        else\n            v = round(v, 4)\n            result = result.."\\""..v.."\\""\n        end\n        result = result..","\n    end\n    -- Remove leading commas from the result\n    if result ~= "" then\n        result = result:sub(1, result:len()-1)\n    end\n    return result.."}"\nend\nfunction round(x, n)\n    n = math.pow(10, n or 0)\n    x = x * n\n    if x >= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end\n    return x / n\nend\nfunction insertBox()\n    -- Generate random numbers\n    local rand1 = math.random()\n    local rand2 = math.random()\n    local rand3 = math.random()\n    -- Generate random disturbances on position and orientation\n    local dx = (2*rand1-1)*0.1\n    local dy = (2*rand2-1)*0.1\n    local dphi = (2*rand3-1)*0.5\n    local disturbedCoordinates = {0,0,0}\n    disturbedCoordinates[1] = insertCoordinate[1]+dx\n    disturbedCoordinates[2] = insertCoordinate[2]+dy\n    disturbedCoordinates[3] = insertCoordinate[3]\n    -- Copy and paste box and boxDummy\n    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)\n    -- Update last inserted box time\n    T_last_inserted = sim.getSimulationTime()\n    -- Move and rotate\n    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)\n    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})\n    -- Store handles to boxes and dummies\n    table.insert(boxList,insertedObjects[1])\n    table.insert(boxDummyList,insertedObjects[2]) \n    -- Decide if object is good or bad\n    local decision = math.random() \n    if decision <= goodPercentage then\n    -- Object is good, assign goodColor\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)\n        table.insert(boolList,true)\n    else\n    -- Object is bad, assign random color\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})\n        table.insert(boolList,false)\n    end\nend\n-- See the user manual or the available code snippets for additional callback functions and details\n \n \n', 'tags': '', 'url': 'Online Exam.html'}, {'title': 'w17', 'text': '目前可以按數字鍵控制夾爪到相對應的九宮格位置 \n 按鍵位置: \n \xa0數字1~9\xa0 \n \xa0X 吸取方塊\xa0 \xa0(有時會吸不到) \n \xa0R 手臂回歸原點\xa0 \n \n 示範影片 \n \n 程式如下 \n function sysCall_init()\n    axis1=sim.getObject(\'./joint1\')\n    axis2=sim.getObject(\'./joint2\')\n    axis3=sim.getObject(\'./joint3\')\n    suctionPad=sim.getObject(\'/suctionPad\')\n    rotation1 = 0\n    rotation2 = 0\n    rotation3 = 0\n    deg = math.pi/180.\n    enableSuctionPad(true)\nend\nfunction enableSuctionPad(enable)\n    -- use the suctionPad object to pass the variable activity value\n    -- if enable = true, the activity = \'on\'\n    if enable then\n        sim.writeCustomDataBlock(suctionPad,\'activity\',\'on\')\n    else\n        sim.writeCustomDataBlock(suctionPad,\'activity\',\'off\')\n    end\nend\nfunction sysCall_actuation() \n--[[\n    rotation1 = rotation1 + 1*deg\n    print(rotation1)\n    sim.setJointPosition(axis1, -rotation1)\n    sim.setJointPosition(axis2, -rotation1)\n]]\n    message, auxiliaryData=sim.getSimulatorMessage()\n    while message ~= -1 do\n        key=auxiliaryData[1]\n        sim.addStatusbarMessage(\'user press key:\'..key)\n        if (message==sim.message_keypress) then\n           --if (auxiliaryData[1]==112) then --p activate the suction pad\n            if (auxiliaryData[1]==string.byte(\'p\')) then\n                -- if key p pressed activate the suction mode\n--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\')\n                enableSuctionPad(true)\n            end -- if p\n            if (auxiliaryData[1]==string.byte(\'q\')) then --q deactivate the suction pad\n                -- if key q pressed deactivate the suction mode\n--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\')\n                enableSuctionPad(false)\n            end -- if q\n            if (auxiliaryData[1]==string.byte(\'k\')) then --k right turn in degree\n                -- if key k pressed axis1 angle adds 2 degrees\n                 rotation1 = rotation1 + 2*deg\n                 --sim.setJointPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis1, rotation1)\n            end -- if k\n            if (auxiliaryData[1]==string.byte(\'l\')) then --l left turn in degree\n                -- if key l pressed axis1 angle substract 2 degrees\n                 rotation1 = rotation1 - 2*deg\n                 --sim.setJointPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis1, rotation1)\n            end -- if l\n-- for joint2 start ##########################################################\n            if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree\n                -- if key r pressed axis1 angle adds 2 degrees\n                 rotation2 = rotation2 + 1*deg\n                 --sim.setJointPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis2, rotation2)\n            end -- if k\n            if (auxiliaryData[1]==string.byte("j")) then\n                -- if key j pressed axis2 angle substract 2 degrees\n                 rotation2 = rotation2 - 1*deg\n                 --sim.setJointPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis2, rotation2)\n            end -- if j\n-- for joint2 end ##########################################################\n-- for joint3 start ##########################################################\n            if (auxiliaryData[1]== string.byte("f")) then\n                -- if key f pressed axis3 angle adds 2 degrees\n                 rotation3 = rotation3 + 1*deg\n                 --sim.setJointPosition(axis3, rotation3)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if f\n            if (auxiliaryData[1]==string.byte("g")) then\n                -- if key g pressed axis3 angle substract 2 degrees\n                 rotation3 = rotation3 - 1*deg\n                 --sim.setJointPosition(axis3, rotation3)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if g\n-- for joint3 end ##########################################################\n            if (auxiliaryData[1]==99) then --c coordinate of block\n                blockPosition = sim.getObjectPosition(block, BaseFrame)\n                sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))\n            end --if c\n            if (auxiliaryData[1]==string.byte(\'z\')) then \n                 rotation1 = rotation1 - 5*deg\n                 rotation2 = rotation2 - 5*deg\n                 rotation3 = rotation3 - 5*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if z\n             if (auxiliaryData[1]==string.byte(\'x\')) then \n                 rotation1 = rotation1 - 10*deg\n                 rotation2 = rotation2 - 27*deg\n                 rotation3 = rotation3 - 29*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if x\n            if (auxiliaryData[1]==string.byte(\'r\')) then \n                 sim.setJointTargetPosition(axis1, 0)\n                 sim.setJointTargetPosition(axis2, 0)\n                 sim.setJointTargetPosition(axis3, 0)\n                 rotation1 = 0\n                 rotation2 = 0\n                 rotation3 = 0\n            end -- if r\n            if (auxiliaryData[1]==string.byte(\'3\')) then \n                 rotation1 = rotation1 - 35*deg\n                 rotation2 = rotation2 + 10*deg\n                 rotation3 = rotation3 - 2*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 3\n            if (auxiliaryData[1]==string.byte(\'2\')) then \n                 rotation1 = 0\n                 rotation2 = rotation2 + 10*deg\n                 rotation3 = rotation3 + 10*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 2\n            if (auxiliaryData[1]==string.byte(\'1\')) then \n                 rotation1 = rotation1 + 35*deg\n                 rotation2 = rotation2 + 10*deg\n                 rotation3 = rotation3 - 2*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 1\n            if (auxiliaryData[1]==string.byte(\'4\')) then \n                 rotation1 = rotation1 + 20*deg\n                 rotation2 = rotation2 - 20*deg\n                 rotation3 = rotation3 - 60*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 4\n            if (auxiliaryData[1]==string.byte(\'5\')) then \n                 rotation1 = 0\n                 rotation2 = rotation2 - 20*deg\n                 rotation3 = rotation3 - 50*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 5\n            if (auxiliaryData[1]==string.byte(\'6\')) then \n                 rotation1 = rotation1 - 20*deg\n                 rotation2 = rotation2 - 20*deg\n                 rotation3 = rotation3 - 60*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 6\n            if (auxiliaryData[1]==string.byte(\'7\')) then \n                 rotation1 = rotation1 + 15*deg\n                 rotation2 = rotation2 - 50*deg\n                 rotation3 = rotation3 - 240*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 7\n            if (auxiliaryData[1]==string.byte(\'8\')) then \n                 rotation1 = 0\n                 rotation2 = rotation2 - 50*deg\n                 rotation3 = rotation3 - 240*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 8\n            if (auxiliaryData[1]==string.byte(\'9\')) then \n                 rotation1 = rotation1 - 15*deg\n                 rotation2 = rotation2 - 50*deg\n                 rotation3 = rotation3 - 240*deg\n                 sim.setJointTargetPosition(axis1, rotation1)\n                 sim.setJointTargetPosition(axis2, rotation2)\n                 sim.setJointTargetPosition(axis3, rotation3)\n            end -- if 9\n       end  -- if\n    message, auxiliaryData=sim.getSimulatorMessage()\n    end -- while\nend -- function\n \nfunction sysCall_sensing() \n--[[\n    -- Read Proximity sensor (0= nothing detected, 1 = object detected)\n    local res = sim.readProximitySensor(proximity)\n \n    -- Check if possible to insert an new box\n    if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then\n        insertBox()\n    end\n \n    -- If proximity sensor detects an object, stop the belt, stop inserting objects\n    if res == 1 and not hasStopped then\n        if boolList[1] then\n            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)\n            deltaTime = sim.getSimulationTime()-T_last_inserted\n            hasStopped = true\n        else\n            local box = table.remove(boxList,1)\n            local boxDummy = table.remove(boxDummyList,1)\n            table.remove(boolList,1)\n \n            sim.removeObject(box)\n            sim.removeObject(boxDummy)\n        end\n    end\n \n    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting\n    if res == 0 and hasStopped then\n        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)\n        hasStopped = false\n        T_last_inserted = sim.getSimulationTime()-deltaTime\n    end\n     \n]]--\nend\nfunction sysCall_sensing()\n    -- put your sensing code here\nend\nfunction sysCall_cleanup()\n    -- do some clean-up here\nend\n-- Convert a lua table into a lua syntactically correct string\nfunction table_to_string(tbl)\n    local result = "{"\n    for k, v in pairs(tbl) do\n        -- Check the key type (ignore any numerical keys - assume its an array)\n        if type(k) == "string" then\n            result = result.."[\\""..k.."\\"]".."="\n        end\n        -- Check the value type\n        if type(v) == "table" then\n            result = result..table_to_string(v)\n        elseif type(v) == "boolean" then\n            result = result..tostring(v)\n        else\n            v = round(v, 4)\n            result = result.."\\""..v.."\\""\n        end\n        result = result..","\n    end\n    -- Remove leading commas from the result\n    if result ~= "" then\n        result = result:sub(1, result:len()-1)\n    end\n    return result.."}"\nend\nfunction round(x, n)\n    n = math.pow(10, n or 0)\n    x = x * n\n    if x >= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end\n    return x / n\nend\nfunction insertBox()\n    -- Generate random numbers\n    local rand1 = math.random()\n    local rand2 = math.random()\n    local rand3 = math.random()\n    -- Generate random disturbances on position and orientation\n    local dx = (2*rand1-1)*0.1\n    local dy = (2*rand2-1)*0.1\n    local dphi = (2*rand3-1)*0.5\n    local disturbedCoordinates = {0,0,0}\n    disturbedCoordinates[1] = insertCoordinate[1]+dx\n    disturbedCoordinates[2] = insertCoordinate[2]+dy\n    disturbedCoordinates[3] = insertCoordinate[3]\n    -- Copy and paste box and boxDummy\n    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)\n    -- Update last inserted box time\n    T_last_inserted = sim.getSimulationTime()\n    -- Move and rotate\n    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)\n    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})\n    -- Store handles to boxes and dummies\n    table.insert(boxList,insertedObjects[1])\n    table.insert(boxDummyList,insertedObjects[2]) \n    -- Decide if object is good or bad\n    local decision = math.random() \n    if decision <= goodPercentage then\n    -- Object is good, assign goodColor\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)\n        table.insert(boolList,true)\n    else\n    -- Object is bad, assign random color\n        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})\n        table.insert(boolList,false)\n    end\nend\n-- See the user manual or the available code snippets for additional callback functions and details \n \n', 'tags': '', 'url': 'w17.html'}, {'title': '分組名單', 'text': 'cd2022-ag1   a40923101 web  |  a40923101 repo  |    40923103 web  |  40923103 repo  |    40923108 web  |  40923108 repo  |    40923137 web  |  40923137 repo  |    40923154 web  |  40923154 repo  |    ZHILIN-0817 web  |  ZHILIN-0817 repo  |    40923119 web  |  40923119 repo  |    40971134 web  |  40971134 repo  |   cd2022-ag2   40923102 web  |  40923102 repo  |    40923104 web  |  40923104 repo  |    40923105 web  |  40923105 repo  |    40923106 web  |  40923106 repo  |    40923107 web  |  40923107 repo  |    40923110 web  |  40923110 repo  |   cd2022-ag3   CYC40923109 web  |  CYC40923109 repo  |    40923111 web  |  40923111 repo  |    40923114 web  |  40923114 repo  |    jason60714 web  |  jason60714 repo  |    40923122 web  |  40923122 repo  |    40923129 web  |  40923129 repo  |    a40923146 web  |  a40923146 repo  |    40923148 web  |  40923148 repo  |   cd2022-ag4   40923116 web  |  40923116 repo  |    40923124 web  |  40923124 repo  |    40923125 web  |  40923125 repo  |    40923126-1 web  |  40923126-1 repo  |    40923127-1 web  |  40923127-1 repo  |    40923128 web  |  40923128 repo  |   cd2022-ag5   40923123 web  |  40923123 repo  |    40923133 web  |  40923133 repo  |    40923134 web  |  40923134 repo  |    40923135 web  |  40923135 repo  |    40923139 web  |  40923139 repo  |    40923142 web  |  40923142 repo  |    40923151 web  |  40923151 repo  |   cd2022-ag6   40923113 web  |  40923113 repo  |    40923113 web  |  40923113 repo  |    40923140 web  |  40923140 repo  |    40923144 web  |  40923144 repo  |    40923149r web  |  40923149r repo  |    40923150 web  |  40923150 repo  |    40923152 web  |  40923152 repo  |   cd2022-ag7   40623143 web  |  40623143 repo  |    40823132 web  |  40823132 repo  |    40823143 web  |  40823143 repo  |    Maxlee999 web  |  Maxlee999 repo  |    40923118 web  |  40923118 repo  |    40923120 web  |  40923120 repo  |    40923136-1 web  |  40923136-1 repo  |    40923143 web  |  40923143 repo  |    40923145 web  |  40923145 repo  |    40923147 web  |  40923147 repo  |    40923153 web  |  40923153 repo  |    40923121 web  |  40923121 repo  |   cd2022-ag8   40923131 web  |  40923131 repo  |    40923138 web  |  40923138 repo  |    40923157 web  |  40923157 repo  | \n', 'tags': '', 'url': '分組名單.html'}, {'title': '程式碼 and 組員名單', 'text': '程式碼 \n # cd2022_gen_html.py\nstudList = "cd2022_list.txt"\ncourTitle = "cd2022"\n\n# group title initial\ngrpTitle = studList[:6] + "-ag"\n\n# student Account and github Account as inputs\ndef perWeb(s, g):\n    pSite = "<a href=\\"https://" + g + ".github.io/" + courTitle + "\\">" + s + " web</a>"\n    print(pSite)\n\ndef perRepo(s, g):\n    pSite = "<a href=\\"https://github.com/" + g + "/" + courTitle + "\\">" + s + " repo</a>"\n    print(pSite)\n    \ndef grpWeb(s, g, ord):\n    pSite = "<a href=\\"https://" + g + ".github.io/" + grpTitle + str(ord) + "\\">grp web</a>"\n    print(pSite)\n    \ndef grpRepo(s, g, ord):\n    pSite = "<a href=\\"https://github.com/" + g + "/" + grpTitle + str(ord) + "\\">grp repo</a>"\n    print(pSite)\n\n# open file, default is read mode, since txt content no chinese char\n# no encoding = "UTF-8" is needed\nwith open(studList) as fh:\n    # readlines will read into the whole line and put into list format\n    # has \\n at the end of each line\n    data = fh.readlines()\n\ngrpCount = 0\nfor i in range(len(data)):\n    # grpCount is the group order\n    grpCount = grpCount + 1\n    group = data[i].rstrip("\\n").split("\\t")\n    # use filter to remove vacant string element\n    # use [1:] to remove first element\n    group = list(filter(None, group))[1:]\n    print(grpTitle + str(grpCount) + "<br />")\n    for j in range(0, len(group), 2):\n        # s is the student number\n        s = group[j]\n        # g is the github account\n        g = group[j+1]\n        perWeb(s, g)\n        print("|")\n        perRepo(s, g)\n        print("|")\n        print("<br />") \n 組員名單 \n 名單下載 \n cd2022_ag1\ta40923101\ta40923101\t40923103\t40923103\t40923108\t40923108\t40923137\t40923137\t40923154\t40923154\tZHILIN-0817\tZHILIN-0817\t40923119\t40923119\t40971134\t40971134\ncd2022_ag2\t40923102\t40923102\t40923104\t40923104\t40923105\t40923105\t40923106\t40923106\t40923107\t40923107\t40923110\t40923110\ncd2022_ag3\tCYC40923109\tCYC40923109\t40923111\t40923111\t40923114\t40923114\tjason60714\tjason60714\t40923122\t40923122\t40923129\t40923129\ta40923146\ta40923146\t40923148\t40923148\ncd2022_ag4\t40923116\t40923116\t40923124\t40923124\t40923125\t40923125\t40923126-1\t40923126-1\t40923127-1\t40923127-1\t40923128\t40923128\ncd2022_ag5\t40923123\t40923123\t40923133\t40923133\t40923134\t40923134\t40923135\t40923135\t40923139\t40923139\t40923142\t40923142\t40923151\t40923151\ncd2022_ag6\t40923113\t40923113\t40923113\t40923113\t40923140\t40923140\t40923144\t40923144\t40923149r\t\t40923149r\t\t40923150\t40923150\t40923152\t40923152\ncd2022_ag7\t40623143\t40623143\t40823132\t40823132\t40823143\t40823143\tMaxlee999\tMaxlee999\t40923118\t40923118\t40923120\t40923120\t40923136-1\t40923136-1\t40923143\t40923143\t40923145\t40923145\t40923147\t40923147\t40923153\t40923153\t40923121\t40923121\ncd2022_ag8\t40923131\t40923131\t40923138\t40923138\t40923157\t40923157 \n \n', 'tags': '', 'url': '程式碼 and 組員名單.html'}, {'title': '教學類', 'text': '這裡是放一些關於軟體的使用方式 \n', 'tags': '', 'url': '教學類.html'}, {'title': '線上簡報教學', 'text': '線上簡報編輯器 :\xa0 https://slides.com \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '線上簡報教學.html'}, {'title': 'NX1980啟動檔修改', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX1980啟動檔修改.html'}, {'title': '電腦小知識', 'text': '這裡是放一些關於電腦軟硬體知識的地方 \n', 'tags': '', 'url': '電腦小知識.html'}, {'title': '硬碟空間釋放原理', 'text': '硬碟的儲存空間跟" 配置單位大小 "很有關聯 \n 可以把 " 配置單位大小 "想像成一個櫃子的大小 \n 一個檔案就需要一個櫃子來裝 \n 但是如果  檔案大小<櫃子儲存容量\xa0 那就會導致 一個很小的檔案佔據了很大的空間 \n 所以在格式化時可以盡量挑選最小的 \n \n -------------------- -------------------- \n 檔案系統  盡量選擇  exFAT  或是  NTFS \n 這會攸關於檔案讀寫的上限 \n 詳細的資料如下 \n \n', 'tags': '', 'url': '硬碟空間釋放原理.html'}, {'title': '硬碟空間釋放教學', 'text': '不管是隨身碟或式硬碟都適用 \n 只要看到"大小"跟"磁碟大小"差距太大(50幾G)或是想清出一點空間就可以做以下調整 \n \n -------------------- -------------------- \n 硬碟格式化(記得要先備份) \n 配置單位選到最小 \n 不要快速格式化 \n \n -------------------- -------------------- \n 等格式化結束就可以把檔案拉回去了 \n (調整前) \n \n -------------------- -------------------- \n (調整後) \n \n', 'tags': '', 'url': '硬碟空間釋放教學.html'}, {'title': '分組頁面', 'text': '', 'tags': '', 'url': '分組頁面.html'}, {'title': '40923151', 'text': '頁面內容如下，可以使用 \xa0control + f\xa0\xa0 搜尋 \n { NX影片 }{ 硬碟知識 } \n -------------------- -------------------- \n NX影片 \n 第4部(基礎3D繪製) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第11部(繪製圓形球體) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第13部(繪製曲柄) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第23部(繪製碟煞盤) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 第36部(繪製金屬壓製薄板) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n -------------------- -------------------- \n 硬碟知識 \n 操作步驟請按這裡 \n 硬碟的儲存空間跟" 配置單位大小 "很有關聯 \n 可以把 " 配置單位大小 "想像成一個櫃子的大小 \n 一個檔案就需要一個櫃子來裝 \n 但是如果  檔案大小<櫃子儲存容量\xa0 那就會導致 一個很小的檔案佔據了很大的空間 \n 所以在格式化時可以盡量挑選最小的 \n \n -------------------- -------------------- \n 檔案系統  盡量選擇  exFAT  或是  NTFS \n 這會攸關於檔案讀寫的上限 \n 詳細的資料如下 \n \n', 'tags': '', 'url': '40923151.html'}, {'title': '期末考週', 'text': '\n \n \n   \n \n \n \n \n \n \n \n \n 任務執行心得: \n 對於nx的操作過程更加熟悉，像是零件的約束條件的限制或是組立的順序，對於uarm的細部零件也更加的了解。 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 原始影片(詳細過程) \n \n 下面為python程式 \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n \nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n \nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n function joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n \nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor6\')\n\n    \n    deg = math.pi/180\n    print(i)\n        xml = [[\n    <ui closeable="true" on-close="closeEventHandler" resizable="true">\n        <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n        <tabs>\n            <tab title="Numeric">a\n                <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n                <label text="" id="3000" wordwrap="true" />\n                <label text="theta1" /> <hslider tick-position="above" tick-interval="1"\n                minimum="-360" maximum="360" on-change="joint1_rotate" />\n                <label text="theta2" /> <hslider tick-position="above" tick-interval="1"\n                minimum="-90" maximum="30" on-change="joint2_rotate" />\n                <label text="theta3" /> <hslider tick-position="above" tick-interval="1"\n                minimum="-90" maximum="60" on-change="joint3_rotate" />\n            </tab>\n        </tabs>\n    </ui>\n    ]]\n    ui=simUI.create(xml)\n     \nend \n', 'tags': '', 'url': '期末考週.html'}]};